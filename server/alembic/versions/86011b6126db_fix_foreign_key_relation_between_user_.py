"""Fix foreign key relation between User and SearchHistory

Revision ID: 86011b6126db
Revises: 5c18f7f60e7d
Create Date: 2025-07-26 00:56:17.342456

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86011b6126db'
down_revision: Union[str, None] = '5c18f7f60e7d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('search_history', sa.Column('query_text', sa.String(), nullable=True))
    op.add_column('search_history', sa.Column('platform', sa.String(), nullable=True))
    op.add_column('search_history', sa.Column('searched_at', sa.DateTime(), nullable=True))
    op.add_column('search_history', sa.Column('user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'search_history', 'users', ['user_id'], ['id'])
    op.drop_column('search_history', 'timestamp')
    op.drop_column('search_history', 'query')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('search_history', sa.Column('query', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('search_history', sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'search_history', type_='foreignkey')
    op.drop_column('search_history', 'user_id')
    op.drop_column('search_history', 'searched_at')
    op.drop_column('search_history', 'platform')
    op.drop_column('search_history', 'query_text')
    # ### end Alembic commands ###
